[gd_scene load_steps=19 format=2]

[ext_resource path="res://textures/coast_sand_rocks_02_arm_1k.jpg" type="Texture" id=1]
[ext_resource path="res://TrainsMultiplayer.gd" type="Script" id=2]
[ext_resource path="res://TrainNew.tscn" type="PackedScene" id=3]
[ext_resource path="res://ui/RouteMonitor.tscn" type="PackedScene" id=4]
[ext_resource path="res://ui/TrainOperations.tscn" type="PackedScene" id=5]
[ext_resource path="res://default_env.tres" type="Environment" id=6]
[ext_resource path="res://addons/free-look-camera/camera.gd" type="Script" id=7]
[ext_resource path="res://PointsCamera.gd" type="Script" id=8]
[ext_resource path="res://textures/coast_sand_rocks_02_ao_1k.jpg" type="Texture" id=11]
[ext_resource path="res://textures/coast_sand_rocks_02_nor_gl_1k.jpg" type="Texture" id=12]
[ext_resource path="res://textures/coast_sand_rocks_02_diff_1k.jpg" type="Texture" id=13]
[ext_resource path="res://textures/coast_sand_rocks_02_rough_1k.jpg" type="Texture" id=14]
[ext_resource path="res://World.gd" type="Script" id=16]

[sub_resource type="Shader" id=10]
code = "// NOTE: Shader automatically converted from Godot Engine 3.5.rc2's SpatialMaterial.

shader_type spatial;
render_mode async_visible,blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform sampler2D texture_metallic : hint_white;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_white;
uniform vec4 roughness_texture_channel;
uniform sampler2D texture_normal : hint_normal;
uniform float normal_scale : hint_range(-16,16);
uniform sampler2D texture_ambient_occlusion : hint_white;
uniform vec4 ao_texture_channel;
uniform float ao_light_affect;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

uniform float randomize_rotation = 0.0;


//void vertex() {
//	UV=UV*uv1_scale.xy+uv1_offset.xy;
//}

float rand(vec2 input) {
    return fract(sin(dot(input.xy, vec2(12.9898,78.233))) * 43758.5453123);
}

float mip_map_level(in vec2 texture_coordinate) {
    vec2  dx_vtc = dFdx(texture_coordinate);
    vec2  dy_vtc = dFdy(texture_coordinate);
    float delta_max_sqr = max(dot(dx_vtc, dx_vtc), dot(dy_vtc, dy_vtc));
    float mml = 0.5 * log2(delta_max_sqr);
    return max(0, mml);
}



void fragment() {
	vec2 tiled_UV_raw = UV * uv1_scale.xy+uv1_offset.xy;
    vec2 tiled_UV = fract(tiled_UV_raw) - 0.5;
	vec2 unique_val = floor(UV*uv1_scale.xy)/uv1_scale.xy;
    float rotation = (rand(unique_val) * 2.0 - 1.0) * randomize_rotation * 3.14;
    float cosine = cos(rotation);
    float sine = sin(rotation);
    mat2 rotation_mat = mat2(vec2(cosine, -sine), vec2(sine, cosine));
    vec2 new_uv = rotation_mat * tiled_UV + 0.5;
    float lod = mip_map_level(tiled_UV_raw * vec2(textureSize(texture_albedo, 0)));
	
	vec4 albedo_tex = textureLod(texture_albedo,new_uv, lod);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,new_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	float roughness_tex = dot(texture(texture_roughness,new_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	NORMALMAP = texture(texture_normal,new_uv).rgb;
	NORMALMAP_DEPTH = normal_scale;
	AO = dot(texture(texture_ambient_occlusion,new_uv),ao_texture_channel);
	AO_LIGHT_AFFECT = ao_light_affect;
}
"

[sub_resource type="ShaderMaterial" id=11]
shader = SubResource( 10 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.0
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/metallic_texture_channel = Plane( 0, 0, 1, 0 )
shader_param/roughness_texture_channel = Plane( 1, 0, 0, 0 )
shader_param/normal_scale = 5.0
shader_param/ao_texture_channel = Plane( 1, 0, 0, 0 )
shader_param/ao_light_affect = 1.0
shader_param/uv1_scale = Vector3( 2500, 50000, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/randomize_rotation = 15.0
shader_param/texture_albedo = ExtResource( 13 )
shader_param/texture_metallic = ExtResource( 1 )
shader_param/texture_roughness = ExtResource( 14 )
shader_param/texture_normal = ExtResource( 12 )
shader_param/texture_ambient_occlusion = ExtResource( 11 )

[sub_resource type="PlaneMesh" id=2]
material = SubResource( 11 )
size = Vector2( 128, 2048 )

[sub_resource type="PhysicsMaterial" id=4]
friction = 0.32

[sub_resource type="ConcavePolygonShape" id=3]
data = PoolVector3Array( 64, 0, 1024, -64, 0, 1024, 64, 0, -1024, -64, 0, 1024, -64, 0, -1024, 64, 0, -1024 )

[node name="Spatial" type="Spatial"]
script = ExtResource( 16 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 1, 0, 0, 0, -0.872905, 0.48789, 0, -0.48789, -0.872905, 0, 0.474293, 0 )
light_energy = 0.5
shadow_enabled = true

[node name="Terrain" type="MeshInstance" parent="."]
transform = Transform( 50, 0, 0, 0, 1, 0, 0, 0, 50, 0, 0, 0 )
mesh = SubResource( 2 )

[node name="StaticBody" type="StaticBody" parent="Terrain"]
physics_material_override = SubResource( 4 )

[node name="CollisionShape" type="CollisionShape" parent="Terrain/StaticBody"]
shape = SubResource( 3 )

[node name="Trains" type="Spatial" parent="."]
script = ExtResource( 2 )
train = ExtResource( 3 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = ExtResource( 6 )

[node name="Control" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -4.0
margin_top = 21.0
margin_right = -4.0
margin_bottom = 21.0
mouse_filter = 1

[node name="Panel" parent="Control" instance=ExtResource( 4 )]

[node name="TrainOperations" parent="Control" instance=ExtResource( 5 )]

[node name="Route" type="Spatial" parent="."]

[node name="Points" type="Spatial" parent="."]
script = ExtResource( 8 )

[node name="PointDefault" type="Spatial" parent="."]

[node name="Camera" type="Camera" parent="PointDefault"]
script = ExtResource( 7 )
